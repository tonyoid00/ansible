---

- name: APT update
  apt: 
    update_cache=yes
    cache_valid_time=600

- name: install software | https repo dependency
  apt: name='apt-transport-https' state=latest

#- name: debian | import repository key - mariadb
#  apt_key: keyserver=keyserver.ubuntu.com id=0xF1656F24C74CD1D8

#- name: debian | import repository key - mongodb
#  apt_key: keyserver=keyserver.ubuntu.com id=0C49F3730359A14518585931BC711F9BA15703C6

#- name: debian | import repository key - elasticsearch
#  apt_key: 
#    url:    https://artifacts.elastic.co/GPG-KEY-elasticsearch
#    state:  present
#
#- name: debian | import repository key - yarn
#  apt_key:
#    url:    https://dl.yarnpkg.com/debian/pubkey.gpg
#    state:  present
#
#- name: debian | import repository key - dotdeb
#  apt_key: url=https://www.dotdeb.org/dotdeb.gpg state=present
#
#- name: debian | import repository key - varnish
#  apt_key: url=https://repo.varnish-cache.org/GPG-key.txt state=present

#- name: debian | add apt repository - mariadb
#  apt_repository: repo="deb http://ftp.bme.hu/pub/mirrors/mariadb/repo/10.1/{{ ansible_distribution|lower() }} {{ ansible_distribution_release }} main"
#    state=present
#
#- name: debian | add apt repository - mongodb
#  apt_repository: repo="deb http://repo.mongodb.org/apt/{{ ansible_distribution|lower() }} {{ ansible_distribution_release }}/mongodb-org/3.4 multiverse"
#    state=present
#
#- name: debian | add apt repository - elasticsearch
#  apt_repository:
#    repo:   "deb https://artifacts.elastic.co/packages/7.x/apt stable main"
#    state:  present
#
#- name: debian | add apt repository - yarn
#  apt_repository:
#    repo: "deb https://dl.yarnpkg.com/debian/ stable main"
#    state: present
#
#- name: debian | add nginx PPA repo
#  apt_repository: repo="ppa:nginx/stable"
#
#- name: debian | add apt repository - dotdeb
#  apt_repository: repo="deb http://packages.dotdeb.org {{ ansible_distribution_release }} all"
#    state=present 
#
#- name: debian | add apt repository - varnish
#  apt_repository: repo="deb https://repo.varnish-cache.org/{{ ansible_distribution|lower() }}/ {{ ansible_distribution_release }} varnish-4.1"
#    state=present

- name: APT update
  apt: update_cache=yes

#- name: install software
#  apt: name={{ item }} state=latest
#  with_items:
#    - apache2

#- name: Change default apache port in apache2/ports.conf
#  replace: dest=/etc/apache2/ports.conf regexp="^Listen 80$" replace="Listen {{apacheport}}"

#- name: Change default apache port in apache2 default site
#  replace: dest=/etc/apache2/sites-available/000-default.conf regexp="<VirtualHost \*:80>$" replace="<VirtualHost *:{{apacheport}}>"

#- name: restart apache
#  service: name=apache2 state=restarted

#- name: install OpenJDK
#  apt:
#    name:
#        - openjdk-8-jdk
#    state:
#        latest
#
- name: install software
  apt:
    name:
#        - memcached
        - nginx
        - mysql-server
        - mysql-client
        #- nodejs
        #- npm
        - curl
        - php7.2
        - php7.2-gd
        - php7.2-json
        - php7.2-mysql
        - php7.2-mbstring
        - php7.2-readline
        - php7.2-xmlrpc
        - php7.2-xsl
        - php7.2-cli
        - php7.2-fpm
        - php7.2-curl
        - php7.2-opcache
        - php-memcached
        - postfix
#        - redis
#        - elasticsearch
#        - yarn
    state:
        latest
#  with_items:
#    - mariadb-server
#    - mongodb-org
#    - elasticsearch
#    - gearman
#    - gearman-tools
#    - nginx
#    - memcached
#    - curl
#    - php7.0
#    - php7.0-gd
#    - php7.0-json
#    - php7.0-mysql
#    - php7.0-mbstring
#    - php7.0-mcrypt
#    - php7.0-readline
#    - php7.0-xmlrpc
#    - php7.0-xsl
#    - php7.0-cli
#    - php7.0-fpm
#    - php7.0-curl
#    - php7.0-opcache
#    - php-memcache
#    - php-memcached
#    - postfix
#    - python-mysqldb

#- name: elasticsearch | add default cluster name
#  replace: dest=/etc/elasticsearch/elasticsearch.yml regexp="^#cluster.name.*my-application$" replace="cluster.name{{':'}} {{devgroup}}"
#  notify: restart elasticsearch
#
#- name: elasticsearch | replace jvm Xms memory
#  replace: dest=/etc/elasticsearch/jvm.options regexp="^-Xms2g$" replace="-Xms{{elastic_memory}}m"
#  notify: restart elasticsearch
#
#- name: elasticsearch | replace jvm Xmx memory
#  replace: dest=/etc/elasticsearch/jvm.options regexp="^-Xmx2g$" replace="-Xms{{elastic_memory}}m"
#  notify: restart elasticsearch
#
- name: Set MySQL config - innodb buffer pool
  lineinfile: dest=/etc/mysql/mysql.conf.d/mysqld.cnf regexp="^innodb_buffer_pool_size" line="innodb_buffer_pool_size = {{sql_innodb_bpool}}" state=present
  notify: restart mysql

- name: Set PHP fpm php.ini parameters - max upload file size
  lineinfile: dest=/etc/php/7.2/fpm/pool.d/www.conf regexp="^php_admin_value\[upload_max_filesize\]" line="php_admin_value[upload_max_filesize] = 256M" state=present
  notify: restart php7.2-fpm

- name: Set PHP fpm php.ini parameters - post max size
  lineinfile: dest=/etc/php/7.2/fpm/pool.d/www.conf regexp="^php_admin_value\[post_max_size\]" line="php_admin_value[post_max_size] = 256M" state=present
  notify: restart php7.2-fpm

- name: Set PHP fpm php.ini parameters - memory limit
  lineinfile: dest=/etc/php/7.2/fpm/pool.d/www.conf regexp="^php_admin_value\[memory_limit\]" line="php_admin_value[memory_limit] = 128M" state=present
  notify: restart php7.2-fpm

- name: Set PHP fpm php.ini parameters - sec php extensions
  lineinfile: dest=/etc/php/7.2/fpm/pool.d/www.conf regexp="^php_admin_value\[security.limit_extensions\]" line="php_admin_value[security.limit_extensions] = .php" state=present
  notify: restart php7.2-fpm

- name: Set PHP fpm php.ini parameters - timezone
  lineinfile: dest=/etc/php/7.2/fpm/pool.d/www.conf regexp="^php_admin_value\[date.timezone\]" line="php_admin_value[date.timezone] = {{timezone}}" state=present
  notify: restart php7.2-fpm

