---

- name: Set DPKG architecture
  set_fact:
    dpkg_arch: "{{ 'amd64' if ansible_architecture == 'x86_64' else ansible_architecture }}"

- name: APT update
  apt: update_cache=yes cache_valid_time=600

- name: install software | https repo dependency
  apt:
    state: latest
    name:
      - ca-certificates
      - apt-transport-https
      - software-properties-common

#- name: debian | import repository key - postgres
#  apt_key: url=https://www.postgresql.org/media/keys/ACCC4CF8.asc file=/usr/share/postgresql-common/pgdg/apt.postgresql.org.asc state=present
#  when: '"postgresql" in repos'

- name: debian | import repository key - postgres create a directory if it does not exist
  ansible.builtin.file:
    path: /usr/share/postgresql-common/pgdg
    state: directory
    mode: '0755'
  when: '"postgresql" in repos'

- name: debian | import repository key - postgres
  ansible.builtin.get_url:
    url: https://www.postgresql.org/media/keys/ACCC4CF8.asc
    dest: /usr/share/postgresql-common/pgdg/apt.postgresql.org.asc
    owner: root
    mode: '0644'
  when: '"postgresql" in repos'

- name: debian | add apt repository - postgres
  apt_repository: repo="deb [arch={{ dpkg_arch }} signed-by=/usr/share/postgresql-common/pgdg/apt.postgresql.org.asc] http://apt.postgresql.org/pub/repos/apt {{ ansible_distribution_release }}-pgdg main" state=present
  when: '"postgresql" in repos'

- name: debian | add apt repository key - docker
  get_url:
    url:  https://download.docker.com/linux/ubuntu/gpg
    dest: /etc/apt/docker.asc
  when: '"docker" in repos'

- name: debian | add apt repository - docker
  apt_repository: repo="deb [arch={{ dpkg_arch }} signed-by=/etc/apt/docker.asc] https://download.docker.com/linux/ubuntu {{ ansible_distribution_release }} stable" state=present
  when: '"docker" in repos'

- name: debian | add ondrej PHP PPA repo
  apt_repository: repo="ppa:ondrej/php"
  when: '"ondrej" in repos'

- name: APT update
  apt:
    update_cache: yes
    cache_valid_time: 600


- name: install software
  apt:
    state: latest
    name: "{{ pkgs }}"
  when: pkgs is defined and pkgs

- name: instal certbot from snap
  community.general.snap:
    name: certbot
    classic: yes
  when: snap is defined and snap

